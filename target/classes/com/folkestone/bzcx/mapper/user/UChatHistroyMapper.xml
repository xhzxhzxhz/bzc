<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.folkestone.bzcx.mapper.user.UChatHistroyMapper" >
  <resultMap id="BaseResultMap" type="com.folkestone.bzcx.bean.bean_do.user.UChatHistroy" >
    <result column="CHAT_ID" property="chatId" jdbcType="VARCHAR" />
    <result column="SENDER" property="sender" jdbcType="VARCHAR" />
    <result column="RECEIVER" property="receiver" jdbcType="VARCHAR" />
    <result column="CHAT_DATE" property="chatDate" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
     <result column="REALNAME" property="receiverName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.folkestone.bzcx.bean.bean_do.user.UChatHistroy" extends="BaseResultMap" >
    <result column="CONTENT" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CHAT_ID, SENDER, RECEIVER, CHAT_DATE, STATUS
  </sql>
  <sql id="Blob_Column_List" >
    CONTENT
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from u_chat_histroy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_chat_histroy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroyExample" >
    delete from u_chat_histroy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroy" >
    insert into u_chat_histroy (CHAT_ID, SENDER, RECEIVER, 
      CHAT_DATE, STATUS, CONTENT
      )
    values (#{chatId,jdbcType=VARCHAR}, #{sender,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{chatDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroy" >
    insert into u_chat_histroy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="chatId != null" >
        CHAT_ID,
      </if>
      <if test="sender != null" >
        SENDER,
      </if>
      <if test="receiver != null" >
        RECEIVER,
      </if>
      <if test="chatDate != null" >
        CHAT_DATE,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="chatId != null" >
        #{chatId,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="chatDate != null" >
        #{chatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.folkestone.bzcx.bean.bean_do.user.UChatHistroyExample" resultType="java.lang.Integer" >
    select count(*) from u_chat_histroy
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update u_chat_histroy
    <set >
      <if test="record.chatId != null" >
        CHAT_ID = #{record.chatId,jdbcType=VARCHAR},
      </if>
      <if test="record.sender != null" >
        SENDER = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null" >
        RECEIVER = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.chatDate != null" >
        CHAT_DATE = #{record.chatDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update u_chat_histroy
    set CHAT_ID = #{record.chatId,jdbcType=VARCHAR},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      RECEIVER = #{record.receiver,jdbcType=VARCHAR},
      CHAT_DATE = #{record.chatDate,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=INTEGER},
      CONTENT = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update u_chat_histroy
    set CHAT_ID = #{record.chatId,jdbcType=VARCHAR},
      SENDER = #{record.sender,jdbcType=VARCHAR},
      RECEIVER = #{record.receiver,jdbcType=VARCHAR},
      CHAT_DATE = #{record.chatDate,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>